# 1. Upload & unzip dataset =====
from google.colab import files
import zipfile, os

uploaded = files.upload()  # chọn file .zip (vd: data_mono.zip)
zip_path = next(iter(uploaded.keys()))

extract_path = "/content/food_mono"
!rm -rf {extract_path}
with zipfile.ZipFile(zip_path, 'r') as zip_ref:
    zip_ref.extractall(extract_path)

# 2. Duyệt dữ liệu ảnh =====
import cv2
import numpy as np

x_data, y_data = [], []
# Correctly list the class directories within the nested folder
class_base_path = os.path.join(extract_path, "food_mono")
class_names = sorted([name for name in os.listdir(class_base_path) if os.path.isdir(os.path.join(class_base_path, name))])

print("Classes:", class_names)

for label, class_name in enumerate(class_names):
    class_dir = os.path.join(class_base_path, class_name)
# Recursively walk through subdirectories to find image files
    for root, dirs, files_in_dir in os.walk(class_dir):
        for fname in files_in_dir:
            fpath = os.path.join(root, fname)
            # Check if the file is an image (basic check based on extension)
            if fname.lower().endswith(('.png', '.jpg', '.jpeg', '.bmp', '.gif')):
                img = cv2.imread(fpath, cv2.IMREAD_GRAYSCALE)
                if img is None:
                    print(f"Warning: Could not read image file: {fpath}")
                    continue
                img_resized = cv2.resize(img, (60, 60))
                x_data.append(img_resized)
                y_data.append(label)

x_data = np.array(x_data, dtype="float32") / 255.0
y_data = np.array(y_data, dtype="int")

print("Dataset shape:", x_data.shape, y_data.shape)

  # 3. Reshape & one-hot
if x_data.shape[0] > 0: # Only proceed if data is loaded
  x_data = x_data.reshape(x_data.shape[0], 60*60)  # flatten
  from keras.utils import to_categorical
  y_data = to_categorical(y_data, num_classes=len(class_names))

  # 4. Chia train/test
  from sklearn.model_selection import train_test_split
  x_train, x_test, y_train, y_test = train_test_split(
      x_data, y_data, test_size=0.2, random_state=42 # Removed stratify=y_data
  )

  print("Train:", x_train.shape, y_train.shape)
  print("Test:", x_test.shape, y_test.shape)

  #5. Xây dựng ANN
  from keras.models import Sequential
  from keras.layers import Dense
  from keras.layers import Dropout # Import Dropout layer

  model = Sequential()
  model.add(Dense(512, activation='relu', input_shape=(3600,)))
  model.add(Dropout(0.3)) # Added Dropout layer
  model.add(Dense(256, activation='relu')) # Added Dense layer
  model.add(Dropout(0.3)) # Added Dropout layer
  model.add(Dense(len(class_names), activation='softmax')) # Output layer with correct number of classes

  model.compile(optimizer="rmsprop",
                loss="categorical_crossentropy",
                metrics=["accuracy"])

  model.summary()

  # 6. Huấn luyện
  history = model.fit(x_train, y_train,
                      epochs=300,
                      batch_size=128,validation_data=(x_test, y_test))

  # 7. Lưu model
  model.save("final_model.h5")
  print("✅ Model saved!")
  # 8.Up flie kiểm tra
from google.colab import files
uploaded = files.upload()
fname = next(iter(uploaded.keys()))

import cv2
import numpy as np
import matplotlib.pyplot as plt

img = cv2.imread(fname, cv2.IMREAD_GRAYSCALE)
img_resized = cv2.resize(img, (60,60))
img_norm = img_resized.astype("float32")/255.0
img_ready = img_norm.reshape(1, 60*60)

preds = model.predict(img_ready)
digit = class_names[np.argmax(preds)]
print("Dự đoán:", digit)

plt.imshow(img_norm, cmap="gray")
plt.title(f"DỰ ĐOÁN ĐÂY LÀ : {digit}")
plt.axis("off")
plt.show()
